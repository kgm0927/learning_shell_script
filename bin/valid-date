#!/bin/bash
# valid-date--윤년 규칙을 고려해, 날짜의 유효성을 검사한다.

# chapter1- 7

normdate="/home/kali/Documents/GitHub/learning_shell_script/bin/normdate"

exceedDayInMonth(){
    # 해당 달의 월 이름과 잘짜가 주어지면,
    #   이 함수는 지정된 요일 값이 해당 월의 최대 요일보다 작거나 같으면 0,
    #   그렇지 않으면 1을 리턴한다.

    case $(echo $1|tr '[:upper:]' '[:lower:]') in # (#1)
    jan* ) days=31 ;; feb* ) days=28 ;; 
    mar* ) days=31 ;; apr* ) days=30 ;;
    may* ) days=31 ;; jun* ) days=30 ;;
    jul* ) days=31 ;; aug* ) days=31 ;;
    sep* ) days=30 ;; oct* ) days=31 ;;
    nov* ) days=30 ;; dec* ) days=31 ;;
       * ) echo "$0: Unknown month name $1" >&2
        exit 1 
    esac


    if [ $2 -lt 1 -o $2 -gt $days ]; then
        return 1
    else
        return 0    # 날짜는 유효하다.
    fi
}

isLeapYear(){
    # 이 함수는 주어진 년도가 윤년이면 0, 그렇지 않으면 1을 리턴한다.
    # 윤년인지 체크하는 공식은 다음과 같다.
    #   1. 4로 나눌 수 없으면 윤년이 아니다.
    #   2. 4와 400으로 나눌 수 있으면 윤년이다.
    #   3. 4로 나눌 수 있다면, 400으로 나눌 수는 없지만
    #      100으로 나눌 수 있는 연도는 윤년이 아니다.
    #   4. 4로 나눌 수 있는 다른 모든 연도는 윤년이다.

    year=$1
    if [ "$((year % 4))" -ne 0 ]; then      # (#2)
        return 1 #Nope, not a leap year.
    elif [ "$((year % 400))" -eq 0 ]; then
        return 0 # Yes, it's a leap year.
    elif [ "$((year % 100))" -eq 0 ]; then
    return 1
    else
        return 0
    fi
}

# 메인 스크립트 시작
# ================

# if [ $# -ne 3 ]; then
#     echo "Usage: $0 month day year" >&2
#     echo "Typical input formats are August 3 1962 and 8 3 1962" >&2
#     exit 1
# fi

# # 날짜를 표준화하고 리턴값을 저장해 오류를 확인하자.

# newdate="$($normdate "$@")" # (#3)

# if [ $? -eq 1 ]; then
#     exit 1      # normdate에서 이미 보고한 오류 조건
# fi

# # 첫 번째 단어 = 월, 두 번째 단어 = 일, 세 번째 단어 =연도로
# #   정규화된 날짜 형식을 분할한다.


# month="$(echo $newdate | cut -d' ' -f1)"
# day="$(echo $newdate | cut -d' ' -f2)"
# year="$(echo $newdate | cut -d' ' -f3)"

# # 이제 날짜가 정규화됐으므로,
# #   날짜값이 적합하고 유효한지 확인해보자(예를 들면, 1월 36일은 유효하지 않다).


# if ! exceedDayInMonth $month "$2"; then
#     if [ "$month" = "Feb" -a "$2" -eq "29" ] ; then
#         if ! isLeapYear $3 ; then
#             echo "$0: $3 is not a leap year, so Feb doesn't have 29 days." >&2 # (#4)
#             exit 1
#         fi
#     else
#     echo "$0: bad day value: $month doesn't have $2 days." >&2
#     exit 1
#     fi
# fi

# echo "Valid date: $newdate"

# exit 0
